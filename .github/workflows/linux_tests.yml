name: Tests (Linux)

on:
  # Activate this workflow manually
  workflow_dispatch:
  push:
    paths:
      - '**/*.py'
      - '**/*.yml'
      - '**/*.ipynb'
      - '**/setup.cfg'
      - '**/pyproject.toml'
      - ".github/**/*.*"


env:
  TESTS_RUN: 0
  TOKENIZERS_PARALLELISM: 'false'  # Avoid logspam by tokenizers


jobs:

  unit-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false  # Avoid cancelling the others if one of these fails
      matrix: 
        folder:
          - "node_tests"
          - "pipeline_tests"
          - "modeling_tests"
          - "other_tests"
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: ./.github/actions/linux_cache/

      # TODO Let's try to remove this one from the unit tests
    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install Haystack
      run: pip install .

    - name: Run tests
      run: |
        pytest -s --maxfail=5 --durations=10 -m "not elasticsearch and not faiss and not milvus and not milvus1 and not weaviate and not pinecone and not graphdb and not integration" test/${{ matrix.folder }} --document_store_type=memory,sql | tee output.txt

        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV


  elasticsearch-tests:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: ./.github/actions/linux_cache/

    - name: Setup Elasticsearch
      run: |
        docker run -d -p 9200:9200 -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms128m -Xmx128m" elasticsearch:7.9.2
        docker run -d -p 9201:9200 -p 9600:9600 -e "discovery.type=single-node" opensearchproject/opensearch:1.2.4

      # TODO Let's try to remove this one from the unit tests
    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install Haystack
      run: pip install .

    - name: Run tests
      run: |
        pytest -s --maxfail=5 --durations=10 -m "elasticsearch and not integration" test/document_store_tests/ --document_store_type=elasticsearch | tee output.txt

        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV
  

  faiss-tests:
    runs-on: ubuntu-20.04
    if: contains(github.event.pull_request.labels.*.name, 'topic:faiss')

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: ./.github/actions/linux_cache/

      # TODO Let's try to remove this one from the unit tests
    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install Haystack
      run: pip install .[faiss]

    - name: Run tests
      run: |
        pytest -s --maxfail=5 --durations=10 -m "faiss and not integration" test/document_store_tests/ --document_store_type=faiss | tee output.txt

        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV


  milvus-tests:
    runs-on: ubuntu-20.04
    if: contains(github.event.pull_request.labels.*.name, 'topic:milvus')

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: ./.github/actions/linux_cache/

    - name: Setup Milvus
      run: |
        cd ../../   # Avoid causing permission issues on hashFiles later by creating unreadable folders like "volumes"
        wget https://github.com/milvus-io/milvus/releases/download/v2.0.0/milvus-standalone-docker-compose.yml -O docker-compose.yml
        sudo docker-compose up -d
        sudo docker-compose ps

      # TODO Let's try to remove this one from the unit tests
    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install Haystack
      run: pip install .[milvus]

    - name: Run tests
      run: |
        pytest -s --maxfail=5 --durations=10 -m "milvus and not integration" test/document_store_tests/ --document_store_type=milvus | tee output.txt

        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV


  weaviate-tests:
    runs-on: ubuntu-20.04
    if: contains(github.event.pull_request.labels.*.name, 'topic:weaviate')

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: ./.github/actions/linux_cache/
    
    - name: Setup Weaviate
      run: docker run -d -p 8080:8080 --name haystack_test_weaviate --env AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED='true' --env PERSISTENCE_DATA_PATH='/var/lib/weaviate' semitechnologies/weaviate:1.11.0

      # TODO Let's try to remove this one from the unit tests
    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install Haystack
      run: pip install .[weaviate]

    - name: Run tests
      run: |
        pytest -s --maxfail=5 --durations=10 -m "weaviate and not integration" test/document_store_tests/ --document_store_type=weaviate | tee output.txt

        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV
  

  pinecone-tests:
    runs-on: ubuntu-20.04
    if: contains(github.event.pull_request.labels.*.name, 'topic:pinecone')

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: ./.github/actions/linux_cache/
    
      # TODO Let's try to remove this one from the unit tests
    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install Haystack
      run: pip install .[pinecone]

    - name: Run tests
      env:
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
      run: |
        pytest -s --maxfail=5 --durations=10 -m "pinecone and not integration" test/document_store_tests/ --document_store_type=pinecone | tee output.txt

        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV


  graphdb-tests:
    runs-on: ubuntu-20.04
    if: contains(github.event.pull_request.labels.*.name, 'topic:graphdb')

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: ./.github/actions/linux_cache/

    - name: Setup GraphDB
      if: ${{ matrix.marker }} == "graphdb"
      run: docker run -d -p 7200:7200 --name haystack_test_graphdb deepset/graphdb-free:9.4.1-adoptopenjdk11
    
      # TODO Let's try to remove this one from the unit tests
    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install Haystack
      run: pip install .[graphdb]

    - name: Run tests
      run: |
        pytest -s --maxfail=5 --durations=10 -m "graphdb and not integration" test/document_store_tests/ --document_store_type=graphdb | tee output.txt

        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV


  rest-and-ui-tests:
    needs: unit-tests
    runs-on: ubuntu-20.04
    if: contains(github.event.pull_request.labels.*.name, 'rest_api')
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Python
      uses: ./.github/actions/linux_cache/

    - name: Run Elasticsearch
      run: docker run -d -p 9200:9200 -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms128m -Xmx128m" elasticsearch:7.9.2

    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install REST API and UI
      run: |
        pip install rest_api/
        pip install ui/

    - name: Run tests
      run: |
        pytest rest_api/ ui/ | tee output.txt
        
        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV
      

  integration-tests:
    needs:
      - unit-tests
      - elasticsearch-tests
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false  # Avoid cancelling the others if one of these fails
      matrix: 
        folder:
          - "node_tests"
          - "pipeline_tests"
          - "modeling_tests"
          - "other_tests"
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: ./.github/actions/linux_cache/

    - name: Run Elasticsearch
      run: docker run -d -p 9200:9200 -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms128m -Xmx128m" elasticsearch:7.9.2

    - name: Run Milvus
      run: |
        cd ../../   # Avoid causing permission issues on hashFiles later by creating unreadable folders like "volumes"
        wget https://github.com/milvus-io/milvus/releases/download/v2.0.0/milvus-standalone-docker-compose.yml -O docker-compose.yml
        sudo docker-compose up -d
        sudo docker-compose ps

    - name: Run Weaviate
      run: docker run -d -p 8080:8080 --name haystack_test_weaviate --env AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED='true' --env PERSISTENCE_DATA_PATH='/var/lib/weaviate' semitechnologies/weaviate:1.11.0

    - name: Run GraphDB
      run: docker run -d -p 7200:7200 --name haystack_test_graphdb deepset/graphdb-free:9.4.1-adoptopenjdk11

    - name: Run Apache Tika
      run: docker run -d -p 9998:9998 -e "TIKA_CHILD_JAVA_OPTS=-JXms128m" -e "TIKA_CHILD_JAVA_OPTS=-JXmx128m" apache/tika:1.24.1

    - name: Run Parsr
      run: docker run -d -p 3001:3001 axarev/parsr:v1.2.2

    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Install tesseract
      run: |
        sudo apt update
        sudo apt-get install tesseract-ocr libtesseract-dev poppler-utils

    - name: Install Haystack
      run: pip install .

    - name: Run tests
      env:
        TOKENIZERS_PARALLELISM: 'false'  # Avoid logspam by tokenizers
      run: |
        pytest -s --maxfail=5 --durations=10 -m "integration" test/${{ matrix.folder }} | tee output.txt

        # Output successful tests
        [[ $(cat output.txt) =~ (([0-9]+) passed) ]]
        echo "TESTS_RUN=${{ env.TESTS_RUN }}+${BASH_REMATCH::-7}" >> $GITHUB_ENV


  count:
    needs: 
     - unit-tests
     - elasticsearch-tests
     - faiss-tests
     - milvus-tests
     - weaviate-tests
     - pinecone-tests
     - graphdb-tests
     - rest-and-ui-tests
     - integration-tests
    if: always()
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Python
      uses: ./.github/actions/linux_cache/

    - name: Count tests
      run: |
        # Count available tests
        [[ $(pytest --collect-only .) =~ (([0-9]+) tests) ]]
        echo "TESTS_COUNT=${BASH_REMATCH::-6}" >> $GITHUB_ENV
        
        echo "============ Tests run: ${{ env.TESTS_RUN }} / $TESTS_COUNT =============="

    - name: Edit PR comment
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: 'Tests run: ${{ env.TESTS_RUN }} / ${{ env.TESTS_COUNT}}'
        comment_includes: 'Tests run: '
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
