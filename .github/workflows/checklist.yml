name: Checklist

on:
  workflow_dispatch:
  pull_request:


jobs:

  check:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    steps:
      
    - name: List workflows
      uses: actions/github-script@v6
      id: available_workflows
      with:
        script: |
          const opts = github.rest.actions.listRepoWorkflows({
            context.repo.owner,
            context.repo.repo
          })
          const workflows = await github.paginate(opts)
          return workflows

        # Find latest run for each workflow
        # Make sure it was run on this commit
        # Return a structure such as {"workflow_name": true/false}

# github.rest.actions.createWorkflowDispatch({
#   owner,
#   repo,
#   workflow_id,
#   ref,
# });
# https://octokit.github.io/rest.js/v18#actions-list-repo-workflows
# https://octokit.github.io/rest.js/v18/#actions-list-workflow-runs
# https://octokit.github.io/rest.js/v18#actions-get-workflow
# https://octokit.github.io/rest.js/v18#actions-get-workflow-run


    - name: Update Checklist
      uses: actions/github-script@v6
      with:
        script: |
          const opts = octokit.rest.issues.listComments({
            context.repo.owner,
            context.repo.repo,
            '${{ github.event.number }}'
          });
          const comments = await github.paginate(opts)
          
          for (const comment of comments) {
            if (comment.user.login === 'github-actions') {
              await octokit.rest.issues.deleteComment({
                context.repo.owner,
                context.repo.repo,
                comment.id
              });
            }
          }

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✨ New message ✨'
          })
